name: Deploy Frontend to AWS S3 and CloudFront

# Trigger the workflow on push to main branch
on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'

# Define jobs
jobs:
  # Job 1: Test and Build Frontend
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    # Checkout code from repository
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Setup Node.js environment
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    # Install dependencies
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    # Run tests (if you have any)
    - name: Run tests
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
      continue-on-error: true
      
    # Build the React app
    - name: Build React app
      run: |
        cd frontend
        npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_STRIPE_PUBLISHABLE_KEY: ${{ secrets.REACT_APP_STRIPE_PUBLISHABLE_KEY }}
        REACT_APP_APP_NAME: EcomStore
        REACT_APP_VERSION: 1.0.0
        GENERATE_SOURCEMAP: false
        
    # Upload build artifacts for deployment job
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
        retention-days: 1

  # Job 2: Deploy to AWS (only on main branch push)
  deploy:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    # Download build artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: ./build
        
    # Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1
        
    # Deploy to S3
    - name: Deploy to S3
      run: |
        aws s3 sync ./build s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete --cache-control "public, max-age=31536000" --exclude "*.html"
        aws s3 sync ./build s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete --cache-control "public, max-age=0, must-revalidate" --include "*.html"
        
    # Invalidate CloudFront cache
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
        
    # Notify deployment success
    - name: Deployment Success Notification
      run: |
        echo "üöÄ Deployment successful!"
        echo "‚úÖ Frontend deployed to S3"
        echo "‚úÖ CloudFront cache invalidated"
        echo "üåê Your app is live at: https://${{ secrets.CLOUDFRONT_DOMAIN_NAME }}"
